{"version":3,"file":"js/30.js","sources":["webpack:///./node_modules/@liquality/wallet-core/dist/src/swaps/utils.js","webpack:///./node_modules/@liquality/wallet-core/dist/src/utils/quotes.js","webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/internals/regexp-get-flags.js","webpack:///./node_modules/core-js/modules/es.string.replace-all.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLiqualityLiquidityForAsset = exports.getSwapProviderInfo = exports.getSwapProviderConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst build_config_1 = tslib_1.__importDefault(require(\"../build.config\"));\nconst factory_1 = require(\"../factory\");\nconst types_1 = require(\"../store/types\");\nconst info_json_1 = tslib_1.__importDefault(require(\"../swaps/astroport/info.json\"));\nconst info_json_2 = tslib_1.__importDefault(require(\"../swaps/fastbtc/info.json\"));\nconst info_json_3 = tslib_1.__importDefault(require(\"../swaps/hop/info.json\"));\nconst info_json_4 = tslib_1.__importDefault(require(\"../swaps/lifi/info.json\"));\nconst info_json_5 = tslib_1.__importDefault(require(\"../swaps/jupiter/info.json\"));\nconst info_json_6 = tslib_1.__importDefault(require(\"../swaps/liquality/info.json\"));\nconst info_json_7 = tslib_1.__importDefault(require(\"../swaps/liqualityboost/liqualityBoostERC20toNative/info.json\"));\nconst info_json_8 = tslib_1.__importDefault(require(\"../swaps/liqualityboost/liqualityBoostNativeToERC20/info.json\"));\nconst info_json_9 = tslib_1.__importDefault(require(\"../swaps/oneinch/info.json\"));\nconst info_json_10 = tslib_1.__importDefault(require(\"../swaps/sovryn/info.json\"));\nconst info_json_11 = tslib_1.__importDefault(require(\"../swaps/thorchain/info.json\"));\nconst info_json_12 = tslib_1.__importDefault(require(\"../swaps/uniswap/info.json\"));\nconst info_json_13 = tslib_1.__importDefault(require(\"../swaps/debridge/info.json\"));\nconst error_parser_1 = require(\"@liquality/error-parser\");\nconst swapProviderInfo = {\n    [types_1.SwapProviderType.Liquality]: info_json_6.default,\n    [types_1.SwapProviderType.UniswapV2]: info_json_12.default,\n    [types_1.SwapProviderType.OneInch]: info_json_9.default,\n    [types_1.SwapProviderType.Thorchain]: info_json_11.default,\n    [types_1.SwapProviderType.FastBTCDeposit]: info_json_2.default,\n    [types_1.SwapProviderType.FastBTCWithdraw]: info_json_2.default,\n    [types_1.SwapProviderType.LiqualityBoostNativeToERC20]: info_json_8.default,\n    [types_1.SwapProviderType.LiqualityBoostERC20ToNative]: info_json_7.default,\n    [types_1.SwapProviderType.Sovryn]: info_json_10.default,\n    [types_1.SwapProviderType.Astroport]: info_json_1.default,\n    [types_1.SwapProviderType.Hop]: info_json_3.default,\n    [types_1.SwapProviderType.Jupiter]: info_json_5.default,\n    [types_1.SwapProviderType.DeBridge]: info_json_13.default,\n    [types_1.SwapProviderType.LiFi]: info_json_4.default,\n};\nfunction getSwapProviderConfig(network, providerId) {\n    return build_config_1.default.swapProviders[network][providerId];\n}\nexports.getSwapProviderConfig = getSwapProviderConfig;\nfunction getSwapProviderInfo(network, providerId) {\n    const config = getSwapProviderConfig(network, providerId);\n    if (!config) {\n        throw (0, error_parser_1.createInternalError)(error_parser_1.CUSTOM_ERRORS.NotFound.SwapProvider.Config(providerId, network));\n    }\n    return swapProviderInfo[config.type];\n}\nexports.getSwapProviderInfo = getSwapProviderInfo;\nconst getLiqualityLiquidityForAsset = ({ asset, network, }) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    const swapProvider = (0, factory_1.getSwapProvider)(network, types_1.SwapProviderType.Liquality);\n    return swapProvider.getAssetLiquidity(asset);\n});\nexports.getLiqualityLiquidityForAsset = getLiqualityLiquidityForAsset;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortQuotes = exports.calculateQuoteRate = void 0;\nconst tslib_1 = require(\"tslib\");\nconst cryptoassets_1 = require(\"@liquality/cryptoassets\");\nconst bignumber_js_1 = tslib_1.__importStar(require(\"bignumber.js\"));\nconst cryptoassets_2 = tslib_1.__importDefault(require(\"./cryptoassets\"));\nfunction calculateQuoteRate(quote) {\n    const fromAmount = (0, cryptoassets_1.unitToCurrency)(cryptoassets_2.default[quote.from], new bignumber_js_1.BigNumber(quote.fromAmount));\n    const toAmount = (0, cryptoassets_1.unitToCurrency)(cryptoassets_2.default[quote.to], new bignumber_js_1.BigNumber(quote.toAmount));\n    return toAmount.div(fromAmount);\n}\nexports.calculateQuoteRate = calculateQuoteRate;\nfunction sortQuotes(quotes, _network) {\n    return quotes.slice(0).sort((a, b) => {\n        return new bignumber_js_1.default(b.toAmount).minus(a.toAmount).toNumber();\n    });\n}\nexports.sortQuotes = sortQuotes;\n//# sourceMappingURL=quotes.js.map","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}